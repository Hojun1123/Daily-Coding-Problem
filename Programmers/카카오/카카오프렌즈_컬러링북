#include <iostream>
#include <map>
#include <vector>
#include <stack>
#include <algorithm>
using namespace std;
struct yx {
	int y;
	int x;
};
// 전역 변수를 정의할 경우 함수 내에 초기화 코드를 꼭 작성해주세요.
vector<int> solution(int m, int n, vector<vector<int>> picture) {
	int i, j;
	int maxSize = 0;
    int areaCount = 0;
	for (i = 0; i < m; ++i)
	{
		for (j = 0; j < n; ++j)
		{
            int color = picture[i][j];
			if (color)
			{
				int count = 0;
				stack<yx> stack;
				stack.push({i, j});
                picture[i][j] = 0;
				while (!stack.empty())
				{
					int y = stack.top().y;
					int x = stack.top().x;
					count ++;
					stack.pop();
					if (y > 0 && (picture[y - 1][x] == color))
					{
						stack.push({ y - 1, x });
                        picture[y-1][x] = 0;
					}
					if (y < m - 1 && (picture[y + 1][x] == color))
					{
						stack.push({ y + 1, x });
                        picture[y+1][x] = 0;
					}
					if (x > 0 && (picture[y][x - 1] == color))
					{
						stack.push({ y, x - 1 });
                        picture[y][x-1] = 0;
					}
					if (x < n - 1 && (picture[y][x + 1] == color))
					{
						stack.push({ y, x + 1 });
                        picture[y][x+1] = 0;
					}
				}
				if(count > maxSize)
                    maxSize = count;
                areaCount++;
			}
		}
	}
    vector<int> answer;
    answer.push_back(areaCount);
    answer.push_back(maxSize);
    return answer;
}
